<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- Artifact details that people will use search for this project -->
	<artifactId>Apis_Maps_Test</artifactId>
	<!-- <artifactId>gwt-maps-api-v3-demo</artifactId> -->
	<name>GWT Maps API V3 - Demo Web App</name>
	<packaging>war</packaging>

	<!-- Link to parent -->
	<parent>
		<groupId>com.google.gwt.maps</groupId>
		<artifactId>gwt-maps-api-v3</artifactId>
		<version>3.8.1</version>
	</parent>

	<properties>
		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
	</properties>

	<!-- Actual build instructions and sequences -->
	<build>

		<!-- Generate compiled stuff in the folder used for developing mode -->
		<!--<outputDirectory>${project.build.directory}/war/WEB-INF/classes</outputDirectory> -->
		<outputDirectory>${basedir}/war/WEB-INF/classes</outputDirectory>
		<testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>

		<!-- Build this code -->
		<sourceDirectory>${basedir}/src</sourceDirectory>
		<testSourceDirectory>${basedir}/test</testSourceDirectory>

		<!-- Add java sources and *.gwt.xml to the jar (necessary for GWT) -->
		<resources>
			<resource>
				<directory>${basedir}/src/</directory>
				<includes>
					<include>**/*.java</include>
					<include>**/*.gwt.xml</include>
				</includes>
			</resource>
		</resources>

		<!-- Plugins needed for building -->
		<plugins>
			<!-- Build and package module as GWT war -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>

				<configuration>
					<style>${gwt.style}</style>
				</configuration>

			</plugin>

			<!-- Don't test GWTTestCases, just the suite -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
						<additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
					</additionalClasspathElements>
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<forkMode>always</forkMode>
					<systemProperties>
						<property>
							<name>gwt.args</name>
							<value>-out ${webappDirectory}</value>
						</property>
					</systemProperties>
					<!-- Only run the suite -->
					<includes>
						<include>**/*TestSuite.java</include>
					</includes>
				</configuration>
			</plugin>
			<!-- Build using java 1.6. GWT requires at least Java 1.5 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- For building war file if desired -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>

				<executions>
					<execution>
						<id>Building War File</id>
						<goals>
							<goal>war</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<webXml>war/WEB-INF/web.xml</webXml>
				</configuration>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											gwt-maven-plugin
										</artifactId>
										<versionRange>
											[2.4.0,)
										</versionRange>
										<goals>
											<goal>resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<!-- Used for local tomcat debugging -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<version>1.1</version>
					<configuration>
						<port>3030</port>
						<warFile>${project.build.directory}/${project.build.finalName}.war</warFile>
					</configuration>

					<goals>
						<goal>run-war</goal>
					</goals>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<!-- External project dependencies -->
	<dependencies>

		<!-- GWT Maps API V3 -->
		<dependency>
			<groupId>com.google.gwt.maps</groupId>
			<artifactId>Apis_Google_Maps</artifactId>
			<version>3.8.1</version>
			<scope>compile</scope>
		</dependency>

		<!-- Other Google -->
		<dependency>
			<groupId>com.google.gwt.google-apis</groupId>
			<artifactId>gwt-ajaxloader</artifactId>
		</dependency>
        
		<!-- Just the necessary GWT bits -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
		</dependency>
        
        <!-- Google App Engine dependencies -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${gae.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-labs</artifactId>
            <version>${gae.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        
		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

	</dependencies>

</project>